buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
	}
}


configure(subprojects) {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	
	group = 'ninja.siden'
	version = "0.1.0"

	sourceCompatibility = targetCompatibility = 1.8
	
	repositories.mavenCentral()

	dependencies {
		compile 'io.undertow:undertow-core:1.1.0.CR3'
		testCompile 'junit:junit:4.11'
		testCompile 'org.jmockit:jmockit:1.11'
		testCompile 'org.apache.httpcomponents:httpcomponents-client:4.3.5'
		testCompile 'org.apache.httpcomponents:httpmime:4.3.5'
	}
	
	test {
		systemProperty("java.awt.headless", "true")
	}

	eclipse {
		classpath {
			containers = [
				'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
			]
		}
	}
}

project("siden-core") {
	jar.manifest {
		attributes(
			'Implementation-Title' : name,
			'Implementation-Version': version,
			'Implementation-Vendor': 'siden.ninja',
			'Built-JDK': "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})",
			'Built-Gradle': gradle.gradleVersion
		)
	}
	
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar) {
		classifier = "javadoc"
		from javadoc
	}

	artifacts {
		archives sourcesJar
		archives javadocJar
	}

	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'
	
	def mypom = {
		scm {
			url 'https://github.com/taichi/siden'
		}
		licenses {
			license {
				name "The Apache Software License, Version 2.0"
				url "http://www.apache.org/licenses/LICENSE-2.0.txt"
				distribution "repo"
			}
		}
		developers {
			developer {
				id "taichi"
				name "SATO Taichi"
				email "ryushi@gmail.com"
			}
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				
				artifact sourcesJar
				artifact javadocJar
				
				pom.withXml {
					def root = asNode()
					root.children().last() + mypom
				}
			}
		}
	}

	bintray {
		user = project.hasProperty('bintrayUsername') ? project.getProperty('bintrayUsername') : null
		key =  project.hasProperty('bintrayAPIKey') ? project.getProperty('bintrayAPIKey') : null
		publications = ['mavenJava']
		pkg {
			repo = 'maven'
			name = 'siden'
			licenses = ['Apache-2.0']
		}
	}
}

task install(dependsOn: 'siden-core:publishToMavenLocal') << {
	logger.info "Installing $project.name"
}

task release(dependsOn: 'siden-core:bintrayUpload') << {
	logger.info "Upload to bintray"
}


project("siden-example") {
	dependencies {
		compile project(":siden-core")
		compile "io.fastjson:boon:0.23"
		compile "com.github.jknack:handlebars:1.3.2"
	}
}

project("siden-sandbox") {
	dependencies {
		compile project(":siden-core")
		compile "io.fastjson:boon:0.23"
	}
}

